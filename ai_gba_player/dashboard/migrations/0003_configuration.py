# Generated by Django 5.2.4 on 2025-08-09 05:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0002_romconfiguration'),
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='AI GBA Player Config', max_length=100, unique=True)),
                ('game', models.CharField(default='pokemon_red', help_text='Game type to play', max_length=50)),
                ('llm_provider', models.CharField(default='google', help_text='LLM provider to use', max_length=50)),
                ('providers', models.JSONField(default=dict, help_text='LLM provider configurations')),
                ('host', models.CharField(default='127.0.0.1', help_text='Host address', max_length=100)),
                ('port', models.IntegerField(default=8888, help_text='Port number for game control')),
                ('notepad_path', models.CharField(default='notepad.txt', help_text='Path to notepad file', max_length=500)),
                ('screenshot_path', models.CharField(default='data/screenshots/screenshot.png', help_text='Screenshot save path', max_length=500)),
                ('video_path', models.CharField(default='data/videos/video_sequence.mp4', help_text='Video save path', max_length=500)),
                ('prompt_template_path', models.CharField(default='data/prompt_template.txt', help_text='Prompt template path', max_length=500)),
                ('knowledge_file', models.CharField(default='data/knowledge_graph.json', help_text='Knowledge graph file path', max_length=500)),
                ('decision_cooldown', models.IntegerField(default=5, help_text='Cooldown between decisions (seconds)')),
                ('thinking_history_max_chars', models.IntegerField(default=20000, help_text='Max characters in thinking history')),
                ('thinking_history_keep_entries', models.IntegerField(default=5, help_text='Number of thinking history entries to keep')),
                ('llm_timeout_seconds', models.IntegerField(default=60, help_text='LLM request timeout (seconds)')),
                ('debug_mode', models.BooleanField(default=True, help_text='Enable debug mode')),
                ('capture_system', models.JSONField(default=dict, help_text='Capture system configuration')),
                ('dual_process_mode', models.JSONField(default=dict, help_text='Dual process mode settings')),
                ('unified_service', models.JSONField(default=dict, help_text='Unified service configuration')),
                ('dashboard', models.JSONField(default=dict, help_text='Dashboard configuration')),
                ('storage', models.JSONField(default=dict, help_text='Storage configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configurations',
            },
        ),
    ]
